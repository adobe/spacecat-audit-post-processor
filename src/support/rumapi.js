/*
 * Copyright 2023 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

import { createUrl } from '@adobe/fetch';
import { hasText, isArray } from '@adobe/spacecat-shared-utils';
import { fetch } from './utils.js';

const API = 'https://helix-pages.anywhere.run/helix-services/run-query@v3/rotate-domainkeys';

function getExpirationDate() {
  const currentDate = new Date();
  currentDate.setDate(currentDate.getDate() + 7);
  return currentDate;
}

export async function generateDomainKey(rumApiKey, finalUrl) {
  if (!hasText(rumApiKey) || !hasText(finalUrl)) {
    throw new Error('Invalid input: rumApiKey and finalUrl are required');
  }
  const params = {
    domainkey: rumApiKey,
    url: finalUrl,
    expiry: getExpirationDate().toISOString(),
    note: 'generated by spacecat alerting',
  };

  let respJson;

  try {
    const resp = await fetch(createUrl(API, params), { method: 'POST' });
    if (!resp.ok) {
      throw new Error(`Request failed with status ${resp.status}: ${resp.statusText}`);
    }
    respJson = await resp.json();
  } catch (e) {
    throw new Error(`Error during rum/rotate-domainkeys api call: ${e.message}`);
  }

  const data = respJson?.results?.data;
  if (!isArray(data) || data.length === 0) {
    throw new Error('Unexpected response format. $.results.data is not array');
  }

  if (data[0].status !== 'success') {
    throw new Error('Domain key response was not successful');
  }

  if (!data[0].key) {
    throw new Error('Rum api returned null domain key');
  }

  return data[0].key;
}
